<b>*** Squeak 4.6/5.0 Release Notes ***</b><br>
<br>
This is a dual release because of the introduction of the new Spur object format. Squeak 4.6 images have the former <b>V3</b> format while Squeak 5.0 images have the <b>Spur</b> format.<br>
<br>
<b>Language Improvements</b><br>
<br>
<i>Core</i><br>
  - Support for multiple bytecode sets.<br>
  - Changes for 64-bit support.<br>
  - Authorize implicit specification of <a href="code://ScaledDecimal">ScaledDecimal</a> scale 123s -&gt; 123.s0 , 0.27s -&gt; 0.27s2 like VisualWorks and Pharo do.<br>
  - <a href="code://Random">Random</a> generator now uses 30-bit Mersenne Twister (p=521) algorithm.<br>
  - Improved <a href="code://WorldState>>#interCyclePause:">WorldState&gt;&gt;#interCyclePause:</a>.<br>
  - Use an intermediate abstract Float representation (<a href="code://#sign">#sign</a>, <a href="code://#exponent">#exponent</a>, <a href="code://#significand">#significand</a>) results in simpler and faster code thanks to avoidance of <a href="code://LargeInteger">LargeInteger</a>.<br>
  - Replaced ExternalSemaphoreTable with <a href="code://ExternalObjectTable">ExternalObjectTable</a> to provide faster registration, and give better support to the current users of external objects.<br>
  - Improvements to <a href="code://ThirtyTwoBitRegister">ThirtyTwoBitRegister</a>. <br>
<br>
<i>Collections</i><br>
  - Port of Travis Griggs' TAG-SortFunctions, an elegant API for multi-level sorting with or without use of the included spaceship operator #<=>.<br>
  - Upper and lower case conversion for Unicode characters including better care handling characters with east Asian encoding.<br>
  - <a href="code://SequenceableCollection>>#groupsDo:">SequenceableCollection&gt;&gt;#groupsDo:</a> allows enumerating groups according to the number of block arguments passed.<br>
  - Introduction of <a href="code://#join">#join</a>, <a href="code://#flatten">#flatten</a> and <a href="code://#flattened">#flattened</a>.<br>
  - Introduction of an OrderedDictionary.<br>
  - Added the (configurable) possibility to disable forced transcript updates as well as to enable a generic redirection to stdout when using the <a href="code://#show:">#show:</a> or <a href="code://#showln:">#showln:</a> interface in Transcript.<br>
  - Introduced a TextReadWriter (abstract) and a HtmlReadWriter (concrete) similar to ImageReadWriter with the goal to convert foreign data into Squeak's text format. <br>
<br>
<i>Graphics</i><br>
  - In addition to scaling and rotating, introduced clipping ability into the Form manipulation interface.<br>
  - Also added convolution to forms and some common kernels for blurring, sharpening and so on.<br>
  - Conveniently adjust saturation or brightness of forms.<br>
  - Better support for True-Type fonts, including PostScript based True-Type fonts.<br>
  - A new <b>Font Importer Tool</b> allows the user to easily import available fonts into the image, either by actually embedding them or by referencing the font file on disk.<br>
  - Support for animated GIFs that only store diff/delta-frames. <br>
<br>
<b>Programming Tools</b><br>
4.6 brings the most impressive enhancements to the IDE in some time.<br>
<br>
  - A clean, modern new look that even performs better on slower hardware.<br>
  - For modern hardware, a new soft-shadows is available by preference.<br>
  - Much better support for small displays (800x600 and smaller).<br>
  - A new "pre-selection" indication helps the user know their input selection was accepted (it's subtle).<br>
  - List filtering now simultaneously indicates its filtered state and the actual filter value by highlighting the matching letters within each row.<br>
  - List filtering now also extends to hierarchical lists, with preference control for using it for navigation, collection, search or filter.<br>
  - Preference ability to indicate the hovered item in lists.<br>
  - A new help-text integrated into ToolBuilder lets any capable UI annotate itself. TextWidgets will now display it in their background in light-gray text.<br>
  - Inspectors and Explorers now have a button to toggle the pane between those two types.<br>
  - Shout syntax highlighting in Inspector and Object Explorer.<br>
  - Preference ability for yellow-click to match some OS behaviors by acting on the item under the hand, rather than the selected item.<br>
  - The Smart-Splitters algorithm got a significant upgrade.<br>
  - Preference ability for windows to open attached to the hand, with optional size gesture upon drop.<br>
  - New Pluggable Menus feature allows easy extension of the menus of most tools.<br>
  - Hot-key access to a new ScratchPad allows users to employ the Smalltalk interpreter as a writing utensil, without having to break flow.<br>
  - The Search Bar now displays any printed expressions in a separate text balloon.<br>
  - Several improvements to the Help browser, including the ability to display pages from the wiki (but still needing more work, so disabled by default for now).<br>
  - Fixes for using the debugger "roughly".<br>
  - Make the debugger process faithful.<br>
  - Fixed <a href="code://#whichMethodsStoreInto:">#whichMethodsStoreInto:</a> pool variables.<br>
  - Benchmarking improvements (<a href="code://#bench">#bench</a>).<br>
  - Restored icons in class lists and method lists.<br>
  - Better support for MVC projects.<br>
  - Filed-in methods are now included in the changes browser as well as Recent Messages list.<br>
  - Support for multiple branches, facilitating the transition to the new Spur image format coming in 5.0.<br>
  - Enhancements to the MC method history and origin functions.<br>
  - Improvements to the Monticello Save dialog.<br>
  - Ability to compare any two repository versions, not just the ones loaded in memory.<br>
  - Allow each menu of the main docking bar to be hidden via a preference.<br>
  - Enhanced "Compare to Clipboard" function shows the would-be results of a paste operation.<br>
  - The Object Explorer now aligns inst-vars and their values in multiple columns by default.<br>
  - A few changes for <a href="code://NewColorPickerMorph">NewColorPickerMorph</a> so it fits better in properties panes.<br>
  - Ability to load custom .prefs files from the file manager.<br>
  - Fixed loss of indentation in <a href="code://MessageTrace">MessageTrace</a> tool after using the filtering function off the menu. <br>
<br>
<b>Good Fixes</b><br>
<br>
  - Fix class reshaping losing the correct <a href="code://#methodClassAssociation">#methodClassAssociation</a> in instance side methods.<br>
  - Fixed the proceed-bug, which, under certain conditions, caused flickering and slow display update after proceeding a UI process.<br>
  - Fix a bug in <a href="code://InflateStream">InflateStream</a> and <a href="code://FastInflateStream">FastInflateStream</a>.<br>
  - Relative-path improvements to FileDirectory.<br>
  - Fix transparency when reading PNG RGB forms. Handle transparency of 16 bits per channel interlaced gray scale PNG.<br>
  - Fix <a href="code://Float class>>#fromIEEE32Bit:">Float class&gt;&gt;#fromIEEE32Bit:</a> in the case of gradual underflow.<br>
  - Some Environments fixes.<br>
  - Clipboard operations between other applications now working as it should. <br>
<br>
<b>Performance</b><br>
<br>
<i>Kernel</i><br>
  - Avoid engaging LargeInteger arithmetic just for testing the sign of a Float.<br>
  - Added <a href="code://Delay>>#delayDuration:">Delay&gt;&gt;#delayDuration:</a> which allows one to reuse the same Delay instance with a different duration.<br>
  - Improvements to ThirtyTwoBitRegister.<br>
  - 8X performance improvement in <a href="code://DateAndTime>>#now">DateAndTime&gt;&gt;#now</a>. <br>
<br>
<i>Collections</i><br>
  - Speed up testing different sized strings.<br>
  - <a href="code://Interval>>#sum">Interval&gt;&gt;#sum</a> is now O(1) instead of O(n).<br>
  - Introduction of <a href="code://Set>>#addNewElement:">Set&gt;&gt;#addNewElement:</a> optimizes graph-traversal.<br>
  - Slightly faster <a href="code://SequenceableCollection >> #copyUpTo:">SequenceableCollection &gt;&gt; #copyUpTo:</a> (for ByteString receivers).<br>
  - Stricter and faster implementation of <a href="code://String >> #format:">String &gt;&gt; #format:</a>.<br>
  - Optimized <a href="code://Interval &gt;&gt; #sum">Interval &gt;&gt; #sum</a>, <a href="code://OrderedCollection &gt;&gt; #at:">OrderedCollection &gt;&gt; #at:</a> and <a href="code://OrderedCollection >> #at:put:">OrderedCollection &gt;&gt; #at:put:</a>.<br>
  - Simpler and faster <a href="code://Character >> #tokenish">Character &gt;&gt; #tokenish</a>.<br>
  - Speed up <a href="code://#endsWith:">#endsWith:</a> for strings. <br>
	Morphic<br>
  - Speed up <a href="code://#valueOfProperty:ifAbsent:">#valueOfProperty:ifAbsent:</a> and friends.<br>
  - Fix to avoid unnecessary layout computation for proportional layout.<br>
  - Performance improved about 10 to 1000x for layouting of scrollpanes and their subclasses, depending on methods accessed.<br>
  - Shout optimizations. <br>
<br>
<b>Clean-ups and Quality Improvements</b><br>
<br>
  - Symbol table improvements such as thread-safety and consistent enumeration.<br>
  - <a href="code://ThreadSafeRandom">ThreadSafeRandom</a>.<br>
  - Many unused and/or deprecated methods removed.<br>
  - LRUCache improvements.<br>
  - Various improvements related to Characters and Strings.<br>
  - Cleanups related to the SqueakV3 bytecode set that are no longer needed.<br>
  - Reduction in the use of ReadWrite streams to instead use either a ReadStream or WriteStream, if possible.<br>
  - Many fundamental UI and Morphic improvements. For example, almost all tools now use the ToolBuilder. <br>
<br>
<b>Compatibility Notes</b><br>
<br>
  - <a href="code://WeakKeyDictionary>>#associationsDo:">WeakKeyDictionary&gt;&gt;#associationsDo:</a> ignores associations with GC'd keys. This affects all enumerating methods.<br>
  - Let <a href="code://WeakArray>>#species">WeakArray&gt;&gt;#species</a> be a regular Array instead of its own class, so that WeakArray's can be successfully compared to Arrays with equivalent contents.<br>
  - An exact version for <a href="code://#floorLog:">#floorLog:</a> for those Number using exact arithmetic. Old behavior compatible with log: is still possible by passing the radix argument asFloat.<br>
  - <a href="code://#inspect">#inspect</a> now returns the UI SystemWindow instead of the object being inspected.<br>
<br>
<b>Only for Squeak 5.0</b><br>
  - Spur format does not support ObjectHistory.<br>
  - Fast <a href="code://ProtoObject>>#become:">ProtoObject&gt;&gt;#become:</a> by avoiding explicit read barriers in all common cases.<br>
  - Immediate characters<br>
  - Immediate floats (64-bit only)<br>
  - Ready for 64-bit by using a 64-bit object header internally<br>
